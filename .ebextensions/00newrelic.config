packages:
    yum:
        newrelic-php5: []
        newrelic-sysmond: []
    rpm:
        newrelic: http://yum.newrelic.com/pub/newrelic/el5/x86_64/newrelic-repo-5-3.noarch.rpm

services:
    sysvinit:
        newrelic-sysmond:
            enabled: true
            ensureRunning: true
            packages:
                yum:
                    newrelic-php5: []
                    newrelic-sysmond: []
        
commands:
    01newrelic_configure:
        command: newrelic-install install
        env:
            NR_INSTALL_SILENT: true
            NR_INSTALL_KEY: 25107fcf119b582d2ddd004bc965fd44abca068a
    02newrelic_sysmond_configure: 
        command: nrsysmond-config --set license_key=25107fcf119b582d2ddd004bc965fd44abca068a

container_commands:
    01newrelic_framework:
        command: sed -i -r 's/;newrelic.framework = .*/newrelic.framework="laravel"/' /etc/php.d/newrelic.ini
    02newrelic_framework_5_6:
        command: sed -i -r 's/;newrelic.framework = .*/newrelic.framework="laravel"/' /etc/php-5.6.d/newrelic.ini
        test: '[ -d "/etc/php-5.6.d" ]'
    03newrelic_framework_7_0:
        command: sed -i -r 's/;newrelic.framework = .*/newrelic.framework="laravel"/' /etc/php-7.0.d/newrelic.ini
        test: '[ -d "/etc/php-7.0.d" ]'
    
    10newrelic_appname:
        command: sed -i -r "s|;?newrelic.appname ?=.*|newrelic.appname='manivelle-backend \(${APP_HOST-manivelle.io}\)'|" /etc/php.d/newrelic.ini
        test: '[ "$APP_WORKER" != "true" ]'
    11newrelic_appname_5_6:
        command: sed -i -r "s|;?newrelic.appname ?=.*|newrelic.appname='manivelle-backend \(${APP_HOST-manivelle.io}\)'|" /etc/php-5.6.d/newrelic.ini
        test: '[ "$APP_WORKER" != "true" && -d "/etc/php-5.6.d" ]'
    12newrelic_appname_7_0:
        command: sed -i -r "s|;?newrelic.appname ?=.*|newrelic.appname='manivelle-backend \(${APP_HOST-manivelle.io}\)'|" /etc/php-7.0.d/newrelic.ini
        test: '[ "$APP_WORKER" != "true" && -d "/etc/php-7.0.d" ]'
        
    20newrelic_appname_worker:
        command: sed -i -r "s|;?newrelic.appname ?=.*|newrelic.appname='manivelle-worker \(${APP_HOST-manivelle.io}\)'|" /etc/php.d/newrelic.ini
        test: '[ "$APP_WORKER" = "true" ]'
    21newrelic_appname_worker_5_6:
        command: sed -i -r "s|;?newrelic.appname ?=.*|newrelic.appname='manivelle-worker \(${APP_HOST-manivelle.io}\)'|" /etc/php-5.6.d/newrelic.ini
        test: '[ "$APP_WORKER" = "true" && -d "/etc/php-5.6.d" ]'
    22newrelic_appname_worker_7_0:
        command: sed -i -r "s|;?newrelic.appname ?=.*|newrelic.appname='manivelle-worker \(${APP_HOST-manivelle.io}\)'|" /etc/php-7.0.d/newrelic.ini
        test: '[ "$APP_WORKER" = "true" && -d "/etc/php-7.0.d" ]'
    
    30newrelic_sysmond_remove_empty_hostname:
        command: sed -i -r "s|hostname=||" /etc/newrelic/nrsysmond.cfg
    31newrelic_sysmond_hostname_backend:
        command: sed -i -r "s|\#hostname\=.*|hostname\=${APP_HOST-manivelle.io}|" /etc/newrelic/nrsysmond.cfg
        test: '[ "$APP_WORKER" != "true" ]'
    32newrelic_sysmond_hostname_worker:
        command: sed -i -r "s|\#hostname\=.*|hostname\=worker\-${APP_HOST-manivelle.io}|" /etc/newrelic/nrsysmond.cfg
        test: '[ "$APP_WORKER" = "true" ]'

files:
    "/opt/elasticbeanstalk/hooks/appdeploy/post/990-newrelic-deployment-notify.sh":
        mode: "000755"
        owner: root
        group: root
        content: |
            #!/bin/bash

            version="1.0"
            
            . /opt/elasticbeanstalk/support/envvars

            function info {
                echo "[INFO] ${@}"
            }

            function warn {
                echo "[WARN] ${@}"
            }

            function error {
                echo "[ERROR] ${@}" >&2
                exit 1
            }

            api_key=${NEWRELIC_API_KEY:-""}
            app_name=${NEWRELIC_APP_NAME:-""}
            deployer=""
            verbose=1
            error_on_fail=0

            if [[ -z "${app_name}" ]]; then
                error "The application name must be provided"
            fi

            if [[ -z "${api_key}" ]]; then
                error "The API key must be provided"
            fi

            if [[ -z "${deployer}" ]]; then
                deployer="AWS Elastic Beanstalk"
            fi

            if [[ -z "${EB_CONFIG_SOURCE_BUNDLE}" ]]; then
              source_path="/opt/elasticbeanstalk/deploy/appsource/source_bundle"
            else
              source_path="${EB_CONFIG_SOURCE_BUNDLE}"
            fi
            if [[ ! -f "${source_path}" ]]; then
                error "Failed to locate source bundle at: ${source_path}"
            fi

            app_version=$(unzip -z "${source_path}" | tail -n 1)
            if [[ -z "${app_version}" ]]; then
                error "Unable to extract application version from source bundle"
            fi

            if [[ ${verbose} == 1 ]]; then
                info "Application name: ${app_name}"
                info "Application version: ${app_version}"
                info "Sending deployment notification..."
            fi

            http_response=$(curl -s -D - -H "x-api-key:${api_key}" -d "deployment[app_name]=${app_name}&deployment[revision]=${app_version}&deployment[user]=${deployer}" "https://rpm.newrelic.com/deployments.xml" -o /dev/null)
            http_status=$(echo "${http_response}" | head -n 1)
            echo "${http_status}" | grep -q "201"

            if [[ ${?} == 0 ]]; then
                if [[ ${verbose} == 1 ]]; then
                    info "Deployment notification successfully sent (${app_name} v${app_version})"
                fi
            else
                msg="Failed to send deployment notification: ${http_status}"
                if [[ ${error_on_fail} == 1 ]]; then
                    error "${msg}"
                else
                    warn "${msg}"
                fi
            fi
